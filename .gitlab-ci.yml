image: "registry.gitlab.com/gitlab-org/cluster-integration/cluster-applications:v1.1.0"

before_script:
  - env
  - kubectl config use-context sysf/drupal/instance/sysf:sysf
  - export SYS_HELM_NEW="true"
  - export SYS_HELM_NAMESPACE_SUFFIX="cid${CI_PIPELINE_ID}"
  - export SYS_K8S_NAMESPACE="env-${SYS_HELM_NAMESPACE_SUFFIX}"
  - kubectl config set-context --current --namespace="${SYS_K8S_NAMESPACE}"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  policy: pull-push
  paths:
    - files-private/cache

stages:
  - init
  - build
  - test
  - deploy
  - verify
  - cleanup

init:
  stage: init
  environment: prd
  script:
    - 'echo "Initializing kubernetes environment..."'
    - mkdir -p files-private/cache
    - rm -rf files-private/cache/sysf
    - git clone https://gitlab.com/sysf/kubernetes/cluster/sysf.git files-private/cache/sysf
    - cd files-private/cache/sysf
    - kubectl create namespace "${SYS_K8S_NAMESPACE}"
    - "kubectl get secret ssh-config --namespace=default -o yaml | sed \"s/namespace: default/namespace: $SYS_K8S_NAMESPACE/\" | kubectl apply --namespace=$SYS_K8S_NAMESPACE -f - || true"
    - "kubectl get secret sysf.one-tls --namespace=admin -o yaml | sed \"s/namespace: admin/namespace: $SYS_K8S_NAMESPACE/\" | kubectl apply --namespace=$SYS_K8S_NAMESPACE -f - || true"
    - "kubectl get secret mariadb-galera --namespace=default -o yaml | sed \"s/namespace: default/namespace: $SYS_K8S_NAMESPACE/\" | kubectl apply --namespace=$SYS_K8S_NAMESPACE -f - || true"
    - "kubectl get secret sys-env-var-config-cid --namespace=default -o yaml | sed \"s/namespace: default/namespace: $SYS_K8S_NAMESPACE/\" | sed 's/name: sys-env-var-config-cid/name: sys-env-var-config/' | kubectl apply --namespace=$SYS_K8S_NAMESPACE -f - || true"
    - helmfile --environment=cid apply
    - kubectl get pods
    - kubectl cp "${CI_PROJECT_DIR}" "web-nginx-php-fpm-0:/app" -c php-fpm
    # - kubectl exec web-nginx-php-fpm-0 -c php-fpm -- bash -c "shopt -s dotglob nullglob && mv -vn /app/sysf/* /app"

build:
  stage: build
  environment: prd
  script:
    - 'echo "Building source repo..."'
    - kubectl exec web-nginx-php-fpm-0 -c php-fpm -- bash -c "composer install"
    - kubectl exec web-nginx-php-fpm-0 -c php-fpm -- bash -c "cd /app && /app/vendor/bin/blt --no-interaction"


test-coding-standard:
  stage: test
  environment: prd/1
  script:
    - 'echo "Test: coding standard..."'

test-workflow-standard:
  stage: test
  environment: prd/2
  script:
    - 'echo "Test: workflow standard..."'

test-security:
  stage: test
  environment: prd/3
  script:
    - 'echo "Test: security..."'

test-licensing:
  stage: test
  environment: prd/4
  script:
    - 'echo "Test: licensing..."'

test-visual-regression:
  stage: test
  environment: prd/5
  script:
    - 'echo "Test: visual regression..."'

test-behavioral:
  stage: test
  environment: prd/6
  script:
    - 'echo "Test: behavioral..."'

test-performance:
  stage: test
  environment: prd/7
  script:
    - 'echo "Test: performance..."'

deploy:
  stage: deploy
  environment: prd
  script:
    - 'echo "Deploying build artifact..."'
    - kubectl exec web-nginx-php-fpm-0 -c php-fpm -- bash -c "cd /app && /app/vendor/bin/blt artifact:deploy --branch=master-build --no-interaction"

verify:
  stage: verify
  environment: prd
  dependencies:
    - deploy
  script:
    - 'echo "Verifying deploy..."'

cleanup:
  stage: cleanup
  environment: prd
  when: always
  script:
    - rm -rf files-private/cache/sysf
    - git clone https://gitlab.com/sysf/kubernetes/cluster/sysf.git files-private/cache/sysf
    - cd files-private/cache/sysf
    - helmfile --environment=cid destroy
    - kubectl delete pods -n "${SYS_K8S_NAMESPACE}" --all --force
    - kubectl delete pvc -n "${SYS_K8S_NAMESPACE}" --all --force
    - kubectl delete ns "${SYS_K8S_NAMESPACE}" --force
