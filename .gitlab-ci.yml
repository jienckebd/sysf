image: "registry.gitlab.com/gitlab-org/cluster-integration/cluster-applications:v1.1.0"

before_script:
  - env
  - ls -lah
  - pwd
  - env
  - cat /etc/os-release

stages:
  - init
  - build
  - test
  - deploy
  - verify
  - cleanup

init:
  stage: build
  environment: prd
  script:
    - 'echo "Initializing kubernetes Drupal environment..."'
    - export SYS_HELM_NAMESPACE_SUFFIX="cid${CI_PIPELINE_ID}"
    - export SYS_K8S_NAMESPACE="env-${SYS_HELM_NAMESPACE_SUFFIX}"
    - git clone https://gitlab.com/sysf/kubernetes/cluster/sysf.git /tmp/sysf
    - cd /tmp/sysf
    - kubectl create namespace "${SYS_K8S_NAMESPACE}"
    - kubectl config set-context --current --namespace="${SYS_K8S_NAMESPACE}"
    - "kubectl get secret ssh-config --namespace=default -o yaml | sed \"s/namespace: default/namespace: $SYS_K8S_NAMESPACE/\" | kubectl apply --namespace=$SYS_K8S_NAMESPACE -f - || true"
    - "kubectl get secret tls-sys --namespace=default -o yaml | sed \"s/namespace: default/namespace: $SYS_K8S_NAMESPACE/\" | kubectl apply --namespace=$SYS_K8S_NAMESPACE -f - || true"
    - "kubectl get secret mariadb --namespace=default -o yaml | sed \"s/namespace: default/namespace: $SYS_K8S_NAMESPACE/\" | kubectl apply --namespace=$SYS_K8S_NAMESPACE -f - || true"
    - helmfile --environment=cid apply
    - while [[ $(kubectl get pods -l app=web-nginx-php-fpm -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "waiting for pod" && sleep 1; done

build:
  stage: build
  environment: prd
  script:
    - 'echo "Building source repo..."'
    - POD_EXEC=$(kubectl get pod -l app=web-nginx-php-fpm -o jsonpath="{.items[0].metadata.name}")
    - kubectl cp "${CI_PROJECT_DIR}" "${POD_EXEC}:/app" -c php-fpm
    - kubectl exec "${POD_EXEC}" -c php-fpm -- bash -c "mv /app/sysf/* /app"
    - kubectl exec "${POD_EXEC}" -c php-fpm -- bash -c "composer install"
    - kubectl exec "${POD_EXEC}" -c php-fpm -- bash -c "cd /app && /app/vendor/bin/blt --no-interaction"

# test-coding-standard:
#   stage: test
#   environment: prd
#   script:
#     - 'echo "Test: coding standard..."'

# test-workflow-standard:
#   stage: test
#   environment: prd
#   script:
#     - 'echo "Test: workflow standard..."'

# test-security:
#   stage: test
#   environment: prd
#   script:
#     - 'echo "Test: security..."'

# test-licensing:
#   stage: test
#   environment: prd
#   script:
#     - 'echo "Test: licensing..."'

# test-visual-regression:
#   stage: test
#   environment: prd
#   script:
#     - 'echo "Test: visual regression..."'

# test-behavioral:
#   stage: test
#   environment: prd
#   script:
#     - 'echo "Test: behavioral..."'

# test-performance:
#   stage: test
#   environment: prd
#   script:
#     - 'echo "Test: performance..."'

deploy:
  stage: deploy
  environment: prd
  script:
    - 'echo "Deploying build artifact..."'
    - POD_EXEC=$(kubectl get pod -l app=web-nginx-php-fpm -o jsonpath="{.items[0].metadata.name}")
    - kubectl exec "${POD_EXEC}" -c php-fpm -- bash -c "cd /app && /app/vendor/bin/blt artifact:deploy --branch=master-build --no-interaction"

verify:
  stage: verify
  environment: prd
  script:
    - 'echo "Verifying deploy..."'

cleanup:
  stage: cleanup
  environment: prd
  dependencies:
    - build
  script:
    - git clone https://gitlab.com/sysf/kubernetes/cluster/sysf.git /tmp/sysf
    - cd /tmp/sysf
    - helmfile --environment=cid destroy
    - kubectl delete pods -n "${SYS_K8S_NAMESPACE}" --all --force
    - kubectl delete pvc -n "${SYS_K8S_NAMESPACE}" --all --force
    - kubectl delete ns "${SYS_K8S_NAMESPACE}" --force
